# keep a list of the packages used in this script
packages <- c("tidyverse","rio","jmv")
# check each of the packages in the list and install them if they're not installed already
for (i in packages){
if(! i %in% installed.packages()){
install.packages(i,dependencies = TRUE)
}
# show each package that is checked
print(i)
}
# load each package into memory so it can be used in the script
for (i in packages){
library(i,character.only=TRUE)
# show each package that is loaded
print(i)
}
# Using the file.choose() command allows you to select a file to import from another folder.
dataset <- rio::import(file.choose())
# This command will allow us to import a file included in our project folder.
# dataset <- rio::import("Album Sales.sav")
# plots for outcome split by groups
ggplot(dataset, aes(x = Happiness))+
geom_histogram(binwidth = 1, color = "black", fill = "white")+
facet_grid(Dose ~ .)
ggplot(dataset, aes(x = Puppy_love))+
geom_histogram(binwidth = 1, color = "black", fill = "white")+
facet_grid(Dose ~ .)
# Make a factor for the box plot
dataset <- dataset %>% mutate(Dose_f = as.factor(Dose))
levels(dataset$FaceType_f)
ggplot(dataset, aes(x = Dose_f, y = Happiness)) +
geom_boxplot()
ggplot(dataset, aes(x = Dose_f, y = Puppy_love)) +
geom_boxplot()
# scatterplot for continuous variables split by group
ggplot(dataset, aes(x = Happiness, y = Puppy_love)) +
geom_point() +
geom_smooth(method = lm) +
facet_grid(Dose_f ~ .)
model <- lm(formula = Happiness ~ Puppy_love + Dose_f, data = dataset)
model
summary(model)
jmv::ancova(
formula = Happiness ~ Dose + Puppy_love,
data = dataset,
effectSize = "omega",
norm = TRUE,
qq = TRUE,
contrasts = list(
list(
var="Dose",
type="simple")),
postHoc = ~ Dose,
postHocCorr = c("bonf"),
emMeans = ~ Dose,
emmTables = TRUE)
jmv::ANOVA(
formula = Happiness ~ Dose,
data = dataset)
jmv::ancova(
formula = Happiness ~ Dose, + Puppy_love,
data = dataset,
effectSize = "omega",
norm = TRUE,
qq = TRUE,
contrasts = list(
list(
var="Dose",
type="simple")),
postHoc = ~ Dose,
postHocCorr = c("bonf"),
emMeans = ~ Dose,
emmTables = TRUE)
jmv::ancova(
formula = Happiness ~ Dose + Puppy_love,
data = dataset,
effectSize = "omega",
norm = TRUE,
qq = TRUE,
contrasts = list(
list(
var="Dose",
type="simple")),
postHoc = ~ Dose,
postHocCorr = c("bonf"),
emMeans = ~ Dose,
emmTables = TRUE)
jmv::ANCOVA(
formula = Happiness ~ Dose + Puppy_love,
data = dataset,
effectSize = "omega",
norm = TRUE,
qq = TRUE,
contrasts = list(
list(
var="Dose",
type="simple")),
postHoc = ~ Dose,
postHocCorr = c("bonf"),
emMeans = ~ Dose,
emmTables = TRUE)
jmv::ancova(
formula = Happiness ~ Dose + Puppy_love,
data = dataset,
effectSize = "omega",
norm = TRUE,
qq = TRUE,
contrasts = list(
list(
var="Dose",
type="simple")),
postHoc = ~ Dose,
postHocCorr = c("bonf"),
emMeans = ~ Dose,
emmTables = TRUE)
View(dataset)
View(model)
# Using the file.choose() command allows you to select a file to import from another folder.
dataset <- rio::import("PuppyLove.sav")
# Using the file.choose() command allows you to select a file to import from another folder.
dataset <- rio::import("Puppy Love.sav")
# This command will allow us to import a file included in our project folder.
# dataset <- rio::import("Album Sales.sav")
# plots for outcome split by groups
ggplot(dataset, aes(x = Happiness))+
geom_histogram(binwidth = 1, color = "black", fill = "white")+
facet_grid(Dose ~ .)
ggplot(dataset, aes(x = Puppy_love))+
geom_histogram(binwidth = 1, color = "black", fill = "white")+
facet_grid(Dose ~ .)
# Make a factor for the box plot
dataset <- dataset %>% mutate(Dose_f = as.factor(Dose))
levels(dataset$FaceType_f)
ggplot(dataset, aes(x = Dose_f, y = Happiness)) +
geom_boxplot()
ggplot(dataset, aes(x = Dose_f, y = Puppy_love)) +
geom_boxplot()
# scatterplot for continuous variables split by group
ggplot(dataset, aes(x = Happiness, y = Puppy_love)) +
geom_point() +
geom_smooth(method = lm) +
facet_grid(Dose_f ~ .)
model <- lm(formula = Happiness ~ Puppy_love + Dose_f, data = dataset)
model
summary(model)
jmv::ancova(
formula = Happiness ~ Dose + Puppy_love,
data = dataset,
effectSize = "omega",
norm = TRUE,
qq = TRUE,
contrasts = list(
list(
var="Dose",
type="simple")),
postHoc = ~ Dose,
postHocCorr = c("bonf"),
emMeans = ~ Dose,
emmTables = TRUE)
jmv::ancova(
formula = Happiness ~ Dose + Puppy_love,
data = dataset,
effectSize = "omega",
norm = TRUE,
qq = TRUE,
contrasts = list(
list(
var="Dose",
type="simple")),
postHoc = ~ Dose,
postHocCorr = c("bonf"),
emMeans = ~ Dose,
emmTables = TRUE),
jmv::ancova(
formula = Happiness ~ Dose + Puppy_love,
data = dataset,
effectSize = "omega",
norm = TRUE,
qq = TRUE,
contrasts = list(
list(
var="Dose",
type="simple")),
postHoc = ~ Dose,
postHocCorr = c("bonf"),
emMeans = ~ Dose,
emmTables = TRUE)
jmv::ancova(
formula = Happiness ~ Dose + Puppy_love,
data = dataset,
effectSize = "omega",
norm = TRUE,
qq = TRUE,
contrasts = list(
list(
var="Dose",
type="simple")),
postHoc = ~ Dose,
postHocCorr = c("bonf"),
emMeans = ~ Dose,
emmTables = TRUE
jmv::ancova(
formula = Happiness ~ Dose + Puppy_love,
data = dataset,
effectSize = "omega",
norm = TRUE,
qq = TRUE,
contrasts = list(
list(
var="Dose",
type="simple")),
postHoc = ~ Dose,
postHocCorr = c("bonf"),
emMeans = ~ Dose,
emmTables = TRUE,
jmv::ancova(
formula = Happiness ~ Dose + Puppy_love,
data = dataset,
effectSize = "omega",
norm = TRUE,
qq = TRUE,
contrasts = list(
list(
var="Dose",
type="simple")),
postHoc = ~ Dose,
postHocCorr = c("bonf"),
emMeans = ~ Dose,
emmTables = TRUE)
jmv::ANOVA(
formula = Happiness ~ Dose,
data = dataset)
# keep a list of the packages used in this script
packages <- c("tidyverse","rio","jmv")
# check each of the packages in the list and install them if they're not installed already
for (i in packages){
if(! i %in% installed.packages()){
install.packages(i,dependencies = TRUE)
}
# show each package that is checked
print(i)
}
# load each package into memory so it can be used in the script
for (i in packages){
library(i,character.only=TRUE)
# show each package that is loaded
print(i)
}
# Using the file.choose() command allows you to select a file to import from another folder.
dataset <- rio::import("Puppy Love.sav")
# This command will allow us to import a file included in our project folder.
# dataset <- rio::import("Album Sales.sav")
# plots for outcome split by groups
ggplot(dataset, aes(x = Happiness))+
geom_histogram(binwidth = 1, color = "black", fill = "white")+
facet_grid(Dose ~ .)
ggplot(dataset, aes(x = Puppy_love))+
geom_histogram(binwidth = 1, color = "black", fill = "white")+
facet_grid(Dose ~ .)
# Make a factor for the box plot
dataset <- dataset %>% mutate(Dose_f = as.factor(Dose))
levels(dataset$FaceType_f)
# Make a factor for the box plot
dataset <- dataset %>% mutate(Dose_f = as.factor(Dose))
levels(dataset$FaceType_f)
ggplot(dataset, aes(x = Dose_f, y = Happiness)) +
geom_boxplot()
ggplot(dataset, aes(x = Dose_f, y = Puppy_love)) +
geom_boxplot()
# scatterplot for continuous variables split by group
ggplot(dataset, aes(x = Happiness, y = Puppy_love)) +
geom_point() +
geom_smooth(method = lm) +
facet_grid(Dose_f ~ .)
# scatterplot for continuous variables split by group
ggplot(dataset, aes(x = Happiness, y = Puppy_love)) +
geom_point() +
geom_smooth(method = lm) +
facet_grid(Dose_f ~ .)
model <- lm(formula = Happiness ~ Puppy_love + Dose_f, data = dataset)
model
jmv::ancova(
formula = Happiness ~ Dose + Puppy_love,
data = dataset,
effectSize = "omega",
norm = TRUE,
qq = TRUE,
contrasts = list(
list(
var="Dose",
type="simple")),
postHoc = ~ Dose,
postHocCorr = c("bonf"),
emMeans = ~ Dose,
emmTables = TRUE)
jmv::ANOVA(
formula = Happiness ~ Dose,
data = dataset)
# keep a list of the packages used in this script
packages <- c("tidyverse","rio","jmv")
# check each of the packages in the list and install them if they're not installed already
for (i in packages){
if(! i %in% installed.packages()){
install.packages(i,dependencies = TRUE)
}
# show each package that is checked
print(i)
}
# load each package into memory so it can be used in the script
for (i in packages){
library(i,character.only=TRUE)
# show each package that is loaded
print(i)
}
# Using the file.choose() command allows you to select a file to import from another folder.
dataset <- rio::import(file.choose())
# keep a list of the packages used in this script
packages <- c("tidyverse","rio","jmv")
# check each of the packages in the list and install them if they're not installed already
for (i in packages){
if(! i %in% installed.packages()){
install.packages(i,dependencies = TRUE)
}
# show each package that is checked
print(i)
}
# load each package into memory so it can be used in the script
for (i in packages){
library(i,character.only=TRUE)
# show each package that is loaded
print(i)
}
# Using the file.choose() command allows you to select a file to import from another folder.
dataset <- rio::import("Puppy Love.sav")
# This command will allow us to import a file included in our project folder.
# dataset <- rio::import("Album Sales.sav")
# plots for outcome split by groups
ggplot(dataset, aes(x = Happiness))+
geom_histogram(binwidth = 1, color = "black", fill = "white")+
facet_grid(Dose ~ .)
ggplot(dataset, aes(x = Puppy_love))+
geom_histogram(binwidth = 1, color = "black", fill = "white")+
facet_grid(Dose ~ .)
# Make a factor for the box plot
dataset <- dataset %>% mutate(Dose_f = as.factor(Dose))
levels(dataset$FaceType_f)
# scatterplot for continuous variables split by group
ggplot(dataset, aes(x = Happiness, y = Puppy_love)) +
geom_point() +
geom_smooth(method = lm) +
facet_grid(Dose_f ~ .)
model <- lm(formula = Happiness ~ Puppy_love + Dose_f, data = dataset)
model
summary(model)
jmv::ancova(
formula = Happiness ~ Dose + Puppy_love,
data = dataset,
effectSize = "omega",
norm = TRUE,
qq = TRUE,
contrasts = list(
list(
var="Dose",
type="simple")),
postHoc = ~ Dose,
postHocCorr = c("bonf"),
emMeans = ~ Dose,
emmTables = TRUE)
jmv::ANOVA(
formula = Happiness ~ Dose,
data = dataset)
jmv::ancova(
formula = Happiness ~ Dose + Puppy_love,
data = dataset,
effectSize = "omega",
norm = TRUE,
qq = TRUE,
contrasts = list(
list(
var="Dose",
type="simple")),
postHoc = ~ Dose,
postHocCorr = c("bonf"),
emMeans = ~ Dose,
emmTables = TRUE)
